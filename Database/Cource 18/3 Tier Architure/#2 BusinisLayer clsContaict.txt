using System;
using System.Data;
using ContactsDataAccess;

namespace ContactsBusinisLayer
{
    public class clsContact
    {

         public enum enMode { Update=0, AddNew=1 };
        public enMode Mode = enMode.AddNew;
        public int ID { get; set; }
        public string Firstname { get; set; }
        public string Lastname { get; set; }
        public string Email { get; set; }
        public string Phone { get; set; }
        public string Address { get; set; }
        public DateTime DateOfBirth { get; set; }
        public int CountryID { get; set; }
        public string ImagePath { get; set; }


     






        public clsContact()
        {
            this.ID = -1;
            this.Firstname = "";
            this.Lastname = "";
            this.Email = "";
            this.Phone = "";
            this.Address = "";
            this.DateOfBirth = DateTime.Now;
            this.ImagePath = "";
            this.CountryID = -1;



            Mode = enMode.AddNew;
        }

        private clsContact(int id,string firstname, string lastname, string email, string phone, string address, DateTime dateofbirth, string imagepath, int countryid)

        {
            this.ID = id;
            this.Firstname = firstname;
            this.Lastname = lastname;
            this.Email = email;
            this.Phone = phone;
            this.Address = address;
            this.ImagePath = imagepath;
            this.DateOfBirth = dateofbirth;
            this.CountryID = countryid;

            Mode = enMode.Update;

        }






        public static clsContact Find(int ID)
        {
            string FirstName = "", LastName = "", Email = "", Phone = "", Address = "", ImagePath = "";
            DateTime DateOfBirth = DateTime.Now;
            int CountryID = -1;
            if (clsContactDataAccess.GetContactInfoByID(ID, ref FirstName, ref LastName, ref Email, ref Phone, ref Address, ref DateOfBirth, ref ImagePath, ref CountryID))
            {
                return new clsContact(ID, FirstName, LastName, Email, Phone, Address, DateOfBirth, ImagePath, CountryID);
            }
            else
            {
                return null;
            }
        }


        private bool _AddNewContact()
        {
            this.ID = clsContactDataAccess.AddNewContact(this.Firstname, this.Lastname, this.Email, this.Phone, this.Address, this.DateOfBirth, this.ImagePath, this.CountryID);
            return (this.ID != -1);
        }




        private bool _UpdateContact()
        {
            return clsContactDataAccess.UpdateContact(this.ID, this.Firstname, this.Lastname, this.Email, this.Phone, this.Address, this.DateOfBirth, this.ImagePath, this.CountryID);
        }
    




        public static bool DeleteContact(int ID)
        {
            return (clsContactDataAccess.DeleteContact(ID));
        }

        public bool Save()
        {
            switch (Mode)
            {
                case enMode.AddNew:
                    if(_AddNewContact())
                    {
                        Mode = enMode.Update;
                        return true;
                    }
                    else
                    {
                        return false;
                    }

                case enMode.Update:
                    return _UpdateContact();
                 
            }
            return false;
        }

       
       



        public static DataTable GetAllContact()
        {
            return clsContactDataAccess.GetAllContact();
        }



        public static bool IsConatctExist(int ID)
        {
            return clsContactDataAccess.IsContactExist(ID);
        }
      


     
    }



  
}
