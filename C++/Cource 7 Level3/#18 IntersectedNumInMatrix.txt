#pragma warning(disable:4996)
#include<iostream>
#include<ctime>
#include<iomanip>
#include<string>
#include<cmath>

using namespace std;


int RandomNumberBetweenRange(int from, int to)
{
	int Random = rand() % (to - from + 1) + from;
	return Random;
}

void printRandomArray(int array[3][3], short Rows, short Cols)
{


	for (int i = 0; i <Rows; i++)
	{

		for (int j = 0; j <Cols; j++)
		{

			//printf("%0*d\t", 2, array[i][j]);
			cout << setw(3) << array[i][j] << " ";
		}
		cout << endl;

	}


}






bool ExistsNumberInMatrix(int arr[3][3], short Rows, short Cols, short Number)
{



	for (int i = 0; i < Rows; i++)
	{
		for (int j = 0; j < Cols; j++)
		{

			if (arr[i][j] == Number)
			{
				return true;
			}
		}
	}
	return false;
}




void IntersectedNumberInMatrix(int arr[3][3], int arr2[3][3], short Rows, short Cols)
{

	short Number = 0;

	for (int i = 0; i < Rows; i++)
	{
		for (int j = 0; j < Cols; j++)
		{
			Number = arr[i][j];
			if (ExistsNumberInMatrix(arr, 3, 3, Number))
			{
				cout << setw(3) << Number << " ";
			}

			
		}
		
	}
	cout << endl;

	
}





int main(){
	srand((unsigned)time(NULL));
	int Matrixarr1[3][3] = { { 1, 2, 9 }, { 5, 2, 4 }, { 2, 3, 9 } };
	int Matrixarr2[3][3] = { { 2, 3, 9 }, { 5, 2, 4 }, { 1, 2, 9 } };
	
	
	 
	cout << " Matrix1: \n";
	printRandomArray(Matrixarr1, 3, 3);
	
	cout << " Matrix2: \n";
	printRandomArray(Matrixarr2, 3, 3);
	cout << endl;
	IntersectedNumberInMatrix(Matrixarr1, Matrixarr2, 3, 3);
}