#pragma warning(disable:4996)
#include<iostream>
#include<string>


using namespace std;






class clsCalculator{
private:

	float _Result = 0;
	float _LastNumber = 0;
	string _LastOperation = "Clear";
	float _PreviResult = 0;

	bool Is_Zero(float Number)
	{
		return(Number == 0);
	}
	


public:


	void Add(int Num)
	{
		_LastNumber = Num;
		_LastOperation = "Adding";
		_PreviResult = _Result;
		_Result += Num;
		
	}

	

	void Subtract(int Num)
	{
		
		_LastNumber = Num;
		_LastOperation = "Subtracting";
		_PreviResult = _Result;
		_Result -= Num;

	}

	





	void Divide(int Num)
	{

		_LastNumber = Num;
		if (Is_Zero(Num))
		{
			Num = 1;
		}
		_LastOperation = "Dividing";
		_PreviResult = _Result;
		_Result /= Num;
		

	}

	void Multiply(int Num)
	{
		_LastNumber = Num;
		_LastOperation = "Multiplying";
		_PreviResult = _Result;
		_Result *= Num;
	}

	void Clear()
	{

		_LastNumber = 0;
		_Result = 0;
		_PreviResult = 0;
		_LastOperation = "Zero";

	}


	void CancelLastOperation()
	{
		_LastNumber = 0;
		_LastOperation = "Cancelling Last Operation";
		_Result = _PreviResult;
	}

	

	float GetFinalResult()
	{
		return _Result;
	}



	void PrintResult()
	{
		cout << "Result After " << _LastOperation << " " << _LastNumber << " is: " << _Result << endl;
	}
};

int main(){

	clsCalculator Calculator1;

	Calculator1.Add(10);
	Calculator1.PrintResult();


	Calculator1.Add(100);
	Calculator1.PrintResult();


	Calculator1.Subtract(20);
	Calculator1.PrintResult();

	Calculator1.Divide(0);
	Calculator1.PrintResult();

	Calculator1.Divide(2);
	Calculator1.PrintResult();

	Calculator1.Multiply(3);
	Calculator1.PrintResult();


	Calculator1.Clear();
	Calculator1.PrintResult();


}